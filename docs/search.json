[{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://antiphon.github.io/tjdc/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://antiphon.github.io/tjdc/articles/example_analysis.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Example analysis","text":"Use internal example, datacube clear blocks changepoints. datacube \\(T=11\\) timepoints, clear structure changes take place.  examples series different changepoints. Note jumping \\(t=11\\) changepoint.","code":"data(\"easystripes\")  x <- easystripes$strip # the truth j <- easystripes$jump # as data frame xdf <- tj_stars_to_data(x)  jdf <- as_tibble(j) |> rename(c_x = x, c_y = y, jump_after = values)  # add truth df  <- xdf |>    left_join(  jdf   ) #> Joining with `by = join_by(c_x, c_y)`  # Some examples df_ex <- df |>    group_by(jump_after) |>    filter( cell %in% sample(unique(cell), 30) ) plot( x ) df_ex |>    ggplot() +   geom_line(aes(time, value, group = cell)) +   facet_wrap(~jump_after)"},{"path":"https://antiphon.github.io/tjdc/articles/example_analysis.html","id":"fit-the-model","dir":"Articles","previous_headings":"Data","what":"Fit the model","title":"Example analysis","text":"--date fitting function moment called tj_fit_m0.6 default, pixel--pixel ‘correlation’ term \\(\\gamma=0\\) spatial interaction set (see gamma) see prior_theta linear model parameters (2D Gaussian ..d. pixels) see prior_delta jump-size parameter, (1D truncated Gaussian ..d. pixels) see prior_sigma2 residual variance (Gamma, one pixels) see prior_k prior probability jumps; \\(T\\)-vector 1 value \\(1-P(~jump)\\) MCMC traces kept output (see keep_hist parameter help). proposed model activated setting \\(\\gamma\\neq 0\\): many components result object, importantly posteriors k: posterior probabilities jump, format k[t,]. example, probability jump pixel 1 \\(T=11\\) k[1,11]. probability jump somewhere also returned component z theta_m, theta_Suppetri: posterior mean (upper triangle ) covariance vector \\((\\theta,\\delta)\\) (regression + jump) sigma2: Residual variance Example: Check convergence.  Example: get likely jump times. Compare truth:","code":"# set prior: negative jumps only. p_d <- list(m = 0, s2 = 1e4, a = -Inf, b = 0)  fit0 <- tj_fit_m0.6(x,                       prior_k = 0.9,                      niter = 1000,                      prior_delta = p_d,                      verbose = TRUE) fit1 <- tj_fit_m0.6(x,                       gamma = 0.6,                      prior_k = 0.9,                      niter = 1000,                      prior_delta = p_d,                      verbose = TRUE) # example cell: c <- 123 tr <- cbind(fit1$hist_theta[,c,],             fit1$hist_z[,c],             fit1$hist_sigma2) |>    as.data.frame() |>     setNames(c(\"a\", \"b\", \"d\", \"P(jump)\", \"sigma2\"))  # use `posterior` etc. trp <- as_draws(tr[-(1:500),]) summary( trp ) #> # A tibble: 5 × 10 #>   variable    mean  median      sd   mad      q5    q95  rhat ess_bulk ess_tail #>   <chr>      <num>   <num>   <num> <num>   <num>  <num> <num>    <num>    <num> #> 1 a         99.1    98.6   11.3    11.3   79.8   119.    1.14     5.65     53.6 #> 2 b          0.378   0.380  1.19    1.18  -1.58    2.26  1.06    18.9     132.  #> 3 d        -31.0   -30.8   13.8    13.3  -54.1    -7.55  1.22     3.92     33.3 #> 4 P(jump)    0.998   1      0.0223  0      0.997   1     1.13     7.19     NA   #> 5 sigma2   104.    104.     1.91    1.89 101.    107.    1.01   306.      409. tr |>    mutate(iter = 1:n()) |>    pivot_longer(-iter)  |>    ggplot() +   geom_line(aes(iter, value)) +   facet_wrap(~name, scale = \"free_y\") pk0_most_likely <- apply(fit0$k, 2, which.max) pk1_most_likely <- apply(fit1$k, 2, which.max) pk0df           <- fit0$cell_info |> mutate(jump_after = pk0_most_likely) pk1df           <- fit1$cell_info |> mutate(jump_after = pk1_most_likely) # Gather estimates df_o <- bind_rows(pk0df |> mutate(model = \"independent\"),                   pk1df |> mutate(model = \"interactions\"),                   df    |> filter(time == 1) |> mutate(model = \"truth\")) |>    mutate(est = factor(jump_after))  # pretty color cc <- c(hcl.colors(10, palette = \"PuOr\"), \"black\")  # Plot df_o |>    ggplot() +   geom_raster(aes(c_x, c_y, fill = est), show.legend = FALSE) +   coord_fixed(expand = FALSE) +   scale_fill_manual(values = cc ) +   facet_wrap(~model, ncol = 1)"},{"path":"https://antiphon.github.io/tjdc/articles/example_analysis.html","id":"naive-parallelisation","dir":"Articles","previous_headings":"Data","what":"Naive parallelisation","title":"Example analysis","text":"Large dimension cube can split smaller cubes spatial domain (raster), model fitted subset separately independently, facilitating simple parallelisation. Due spatial dependency structure, good idea overlap regions bit. three useful functions : tj_divide_raster: Create geometry subsets tj_fit_m0.x: Fit model subset, handle collection possible storage writing tj_stitcher_m0.x: Collect results. First want create mosaic. result contains info tiling. example, sf polygons tiles available.  split raster bounding box \\(3\\)-columns-\\(1\\)-rows separate boxes, overlap 2 pixels. use wrapper fit model subset. default stuff kept memory. See documentation store fit custom file location. result list fits, needs parsed together, particularly pixels overlapping sections need made unique. similar structure earlier examples.  Note parallel fits variance parameters estimated separately.","code":"tiling <- tj_divide_raster(x, n = c(3, 1), buffer = c(1, 1)) tiling$poly |>    ggplot() +    geom_sf( data = st_bbox(x) |> st_as_sfc() , fill = \"orange\") +    geom_sf(alpha = .5) +   geom_sf_text(aes(label = id)) +   expand_limits(y = c(-2, 8) ) fitm_l <- tj_fit_m0.x(x,                      timevar = \"z\",                     tiling = tiling,                     niter = 1000,                     prior_k = 0.9,                     gamma = .6,                      prior_delta = p_d,                     model_variant = \"m0.6\",                     ncores = 3) #> [m0.x 3c][1/1][ave time 5.385954 secs, -4.8e-05 secs left, ready 2023-06-01 15:49:51]      #> [m0.x 3c][1/1][ave time 5.385954 secs][total time: 5.387261 secs] # parse the results from separate tiles fitm <- tj_stitcher_m0.x(fitm_l, tiling) pkm_most_likely <- apply(fitm$k, 2, which.max)  pkmdf <- fitm$cell_info |>    # this table contains duplicate rows for cells in the overlaps   group_by(cell) |>    filter(row_number() == 1) |>    ungroup() |>    left_join(      tibble( cell = fitm$cells, jump_after = pkm_most_likely )  ) #> Joining with `by = join_by(cell)`     # Gather estimates df_o2 <- bind_rows(pk1df |> mutate(model = \"full\"),                    pkmdf |> mutate(model = \"in parts\") ) |>    mutate(est = factor(jump_after))  # Plot df_o2 |>    ggplot() +   geom_raster(aes(c_x, c_y, fill = est), show.legend = FALSE) +   coord_fixed(expand = FALSE) +   scale_fill_manual(values = cc ) +   facet_wrap(~model, ncol = 1) s2 <- fitm$hist_sigma2 |> as_draws() colnames(s2) <- paste0(\"sigma2_\", 1:3) summary(s2) #> # A tibble: 3 × 10 #>   variable  mean median    sd   mad    q5   q95  rhat ess_bulk ess_tail #>   <chr>    <num>  <num> <num> <num> <num> <num> <num>    <num>    <num> #> 1 sigma2_1  108.   105.  25.5  3.92  99.2  115.  1.06     12.2     10.8 #> 2 sigma2_2  110.   107.  29.9  3.85 101.   115.  1.01     75.7     19.0 #> 3 sigma2_3  104.   101.  26.8  3.88  94.9  107.  1.01    140.      36.9"},{"path":"https://antiphon.github.io/tjdc/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tuomas Rajala. Maintainer.","code":""},{"path":"https://antiphon.github.io/tjdc/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rajala T (2023). tjdc: Trends Jumps DataCubes. R package version 0.9, https://antiphon.github.io/tjdc/.","code":"@Manual{,   title = {tjdc: Trends and Jumps in DataCubes},   author = {Tuomas Rajala},   year = {2023},   note = {R package version 0.9},   url = {https://antiphon.github.io/tjdc/}, }"},{"path":[]},{"path":"https://antiphon.github.io/tjdc/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Trends and Jumps in DataCubes","text":"R-package accompanies research paper T Rajala, P Packalen, M Myllymäki, Kangas (2023): Improving detection changepoints short noisy time-series local correlations: Connecting events pixel neighbourhoods, Journal Agricultural, Biological Environmental Statistics, https://doi.org/10.1007/s13253-023-00546-1 implements (proof--concept) Gibbs sampler described model. described model developed ready made solution found required analysis; see .","code":""},{"path":"https://antiphon.github.io/tjdc/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Trends and Jumps in DataCubes","text":"addition CRAN dependencies, install looptimer package. package vignette, consider using build_vignettes = TRUE. vignette also readable package site,","code":"#  devtools::install_github(\"antiphon/looptimer\")  # install.packages(\"doParallel\", \"foreach\", \"sf\", \"stars\", \"dplyr\", \"tidyr\")) devtools::install_github(\"antiphon/tjdc\")"},{"path":"https://antiphon.github.io/tjdc/index.html","id":"input-data","dir":"","previous_headings":"","what":"Input data","title":"Trends and Jumps in DataCubes","text":"Consider timeseries data, stored vector yi = (yi1,...,yiT) values yit ∈ R recorded times t1 < ... < tT. Now consider timeseries yi recorded nodes (spatial) grid. grid-time data array can called datacube: Dimension x-y cuboid describe location, z describes time. See example datasets","code":"data(package = \"tjdc\")  data(\"case_medium_zoom1\") data(\"case_medium_zoom1_details\") data(\"easystripes\")"},{"path":"https://antiphon.github.io/tjdc/index.html","id":"the-model","dir":"","previous_headings":"","what":"The model","title":"Trends and Jumps in DataCubes","text":"package, specifically model implements, designed analyse datacubes assuming want know , , radical change mean yi series short, T ≪ 100, like T = 11 paper’s main example unstructed variability (noise) relatively high, e.g. CV ≫ 5% changepoint events spatially correlated, taking place “patches” locations","code":""},{"path":"https://antiphon.github.io/tjdc/index.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"Trends and Jumps in DataCubes","text":"package provides wrappers Running Gibbs sampler Parallelising: Splitting datacube spatially minor overlap, parallel running model, gathering posteriors main fitting function tjdc::tj_fit_m0.6, proceed . large problems recommended use file-storage options (see tjdc::tj_fit_m0.6).","code":""},{"path":[]},{"path":"https://antiphon.github.io/tjdc/readme.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"tjdc: R package for Trends and Jumps in (flat) DataCubes","text":"R-package accompanies research paper T Rajala, P Packalen, M Myllymäki, Kangas (2023): Improving detection changepoints short noisy time-series local correlations: Connecting events pixel neighbourhoods, Journal Agricultural, Biological Environmental Statistics, https://doi.org/10.1007/s13253-023-00546-1 implements (proof--concept) Gibbs sampler described model. described model developed ready made solution found required analysis; see .","code":""},{"path":"https://antiphon.github.io/tjdc/readme.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"tjdc: R package for Trends and Jumps in (flat) DataCubes","text":"addition CRAN dependencies, install looptimer package. package vignette, consider using build_vignettes = TRUE. vignette also readable package site,","code":"#  devtools::install_github(\"antiphon/looptimer\")  # install.packages(\"doParallel\", \"foreach\", \"sf\", \"stars\", \"dplyr\", \"tidyr\")) devtools::install_github(\"antiphon/tjdc\")"},{"path":"https://antiphon.github.io/tjdc/readme.html","id":"input-data","dir":"","previous_headings":"","what":"Input data","title":"tjdc: R package for Trends and Jumps in (flat) DataCubes","text":"Consider timeseries data, stored vector yi = (yi1,...,yiT) values yit ∈ R recorded times t1 < ... < tT. Now consider timeseries yi recorded nodes (spatial) grid. grid-time data array can called datacube: Dimension x-y cuboid describe location, z describes time. See example datasets","code":"data(package = \"tjdc\")  data(\"case_medium_zoom1\") data(\"case_medium_zoom1_details\") data(\"easystripes\")"},{"path":"https://antiphon.github.io/tjdc/readme.html","id":"the-model","dir":"","previous_headings":"","what":"The model","title":"tjdc: R package for Trends and Jumps in (flat) DataCubes","text":"package, specifically model implements, designed analyse datacubes assuming want know , , radical change mean yi series short, T ≪ 100, like T = 11 paper’s main example unstructed variability (noise) relatively high, e.g. CV ≫ 5% changepoint events spatially correlated, taking place “patches” locations","code":""},{"path":"https://antiphon.github.io/tjdc/readme.html","id":"functionality","dir":"","previous_headings":"","what":"Functionality","title":"tjdc: R package for Trends and Jumps in (flat) DataCubes","text":"package provides wrappers Running Gibbs sampler Parallelising: Splitting datacube spatially minor overlap, parallel running model, gathering posteriors main fitting function tjdc::tj_fit_m0.6, proceed . large problems recommended use file-storage options (see tjdc::tj_fit_m0.6).","code":""},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1.html","id":null,"dir":"Reference","previous_headings":"","what":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1","text":"Timeseries datacube. pixel timeseries, pixels downwards jump timepoint. timepoint called changepoint.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1","text":"","code":"case_medium_zoom1"},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1","text":"object class stars dimension 62 x 63 x 11.","code":""},{"path":[]},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1_details","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1_details","text":"Details case_medium_zoom1 datacube.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1_details","text":"","code":"case_medium_zoom1_details"},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1_details.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1_details","text":"object class list length 4.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/case_medium_zoom1_details.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Medium Challenge Changepoint Timeseries DataCube — case_medium_zoom1_details","text":"- Table pixelwise regression parameters simulation, jump time (), etc. - bounding box info - time-variable values","code":""},{"path":"https://antiphon.github.io/tjdc/reference/check_x.html","id":null,"dir":"Reference","previous_headings":"","what":"Check 1D timeseries — check_x","title":"Check 1D timeseries — check_x","text":"internal use.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/check_x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check 1D timeseries — check_x","text":"","code":"check_x(x, ...)"},{"path":"https://antiphon.github.io/tjdc/reference/check_x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check 1D timeseries — check_x","text":"x time series object ... ignored","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster Cell Neighbourhoods — tj_cell_neighbours","title":"Raster Cell Neighbourhoods — tj_cell_neighbours","text":"Raster Cell Neighbourhoods","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster Cell Neighbourhoods — tj_cell_neighbours","text":"","code":"tj_cell_neighbours(   i,   nr,   nc,   ...,   type = \"square\",   range = 1,   scale_to_8 = FALSE )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster Cell Neighbourhoods — tj_cell_neighbours","text":"focal cell nr number rows xy-grid nc number columns xy-grid ... ignored type \"square\" (default), \"circle\", \"sqexp\" range Range neighbourhood, default 1 1-step-neighbourhoods scale_to_8 normalise kernel 8?","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster Cell Neighbourhoods — tj_cell_neighbours","text":"vector indices. `type='sqexp'`, return weights attribute 'weight'.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raster Cell Neighbourhoods — tj_cell_neighbours","text":"default `type='square'` `range=1`, 8 adjacent pixels. Increasing `range=2` includes neighbours' neighbours (24 pixels). return neighbourhood corners removed, use `type='circle'` drops pixels square-neighbourhood distance larger `range`. weight away neighbours, use `type='sqexp'`. similar circle, weight decreasing exponentially squared distance, scaled 1 distance 1. Non-toroidal neighborhood, edges less neighbours. assume cell-numbering cell = col + (row-1) * ncol.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours_old.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster Cell Neighbourhoods — tj_cell_neighbours_old","title":"Raster Cell Neighbourhoods — tj_cell_neighbours_old","text":"Raster Cell Neighbourhoods","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster Cell Neighbourhoods — tj_cell_neighbours_old","text":"","code":"tj_cell_neighbours_old(i, nr, nc, ...)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours_old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster Cell Neighbourhoods — tj_cell_neighbours_old","text":"focal cell nr number rows xy-grid nc number columns xy-grid ... ignored","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours_old.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster Cell Neighbourhoods — tj_cell_neighbours_old","text":"vector indices. `type='sqexp'`, return weights attribute 'weight'.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cell_neighbours_old.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raster Cell Neighbourhoods — tj_cell_neighbours_old","text":"Non-toroidal neighborhood, edges less neighbours. assume cell-numbering cell = col + (row-1) * ncol.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cfg_m0.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile paramaters for m0.3 — tj_cfg_m0.3","title":"Compile paramaters for m0.3 — tj_cfg_m0.3","text":"Compile paramaters m0.3","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cfg_m0.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile paramaters for m0.3 — tj_cfg_m0.3","text":"","code":"tj_cfg_m0.3(...)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_cfg_m0.6.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile paramaters for m0.6 — tj_cfg_m0.6","title":"Compile paramaters for m0.6 — tj_cfg_m0.6","text":"Compile paramaters m0.6 Compile paramaters m0.6","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_cfg_m0.6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile paramaters for m0.6 — tj_cfg_m0.6","text":"","code":"tj_cfg_m0.6(...)  tj_cfg_m0.6(...)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_contextual_mann_kendall.html","id":null,"dir":"Reference","previous_headings":"","what":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","title":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","text":"Mann-Kendall trend test 2D rasterStacks, assuming layers represent timepoints.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_contextual_mann_kendall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","text":"","code":"tj_contextual_mann_kendall(   x,   ...,   neighbourhood = 2,   calc_slope = FALSE,   timevar = \"z\",   attrvar = \"values\" )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_contextual_mann_kendall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","text":"x stars-object, x,y time dimensions, least one attribute. ... ignored neighbourhood 2:queen, 1:rook, 0:none (classical M-K test) 2 0 implemented. calc_slope Calculate Theil-Sen slope estimate series? Default:FALSE timevar Name time dimension. Default \"z\" attrvar Name value attribute. Default \"values","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_contextual_mann_kendall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","text":"stars-object following attributes: 'S' Mann-Kendall Statistic (classical smoothed);  's2' variance statistic; 'p' p-value trend detected; (optional) 'slope' Theil-Sen slope estimate.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_contextual_mann_kendall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","text":"Assume values rasterStack location (cell) time (layers) time-series. function calculates Mann-Kendall trend test series, returns relevant statistics new rasterStack. **Contextual** version (default; see ref.) simply averages  Mann-Kendall-test's S-statistic  location neighbours, much like running 'focal(S, w=matrix(1/9,3,3))'  non-contextual/cellwise statistic raster.  However, function also calculates adjusted variances (hence p-values). NOTE assumes equal interval timeseries 'time' missing. Matters slope calculation.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_contextual_mann_kendall.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Contextual Mann-Kendall Trend Test — tj_contextual_mann_kendall","text":"Neeti, N. Eastman J.R. (2011) Contextual Mann-Kendall Approach Assesment Trend Significance Image Time Series, Transactions GIS","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide bounding box into subsets, return polygons — tj_divide_bbox","title":"Divide bounding box into subsets, return polygons — tj_divide_bbox","text":"Divide sides factor 2^q","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide bounding box into subsets, return polygons — tj_divide_bbox","text":"","code":"tj_divide_bbox(bb, power_of_2 = 2, q = power_of_2, expand = 0)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Tile stars raster — tj_divide_raster","title":"Tile stars raster — tj_divide_raster","text":"Divide domain raster regular tiling, optional overlap.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tile stars raster — tj_divide_raster","text":"","code":"tj_divide_raster(x, n = c(2, 2), buffer = c(0, 0), open.upper = TRUE)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tile stars raster — tj_divide_raster","text":"x stars raster n two-vector giving number tiles per x y, order. buffer two-vector buffering sub-rasters direction, raster pixels. open.upper Remove overlap? (TRUE)","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tile stars raster — tj_divide_raster","text":"list st-polygons, cells, row-col-ranges, row-col-ranges without buffer. row-col ranges closed default, even `buffer = c(0,0)` overlap ends. can avoided setting `open.upper=TRUE` whence range include highest row/col, apart tile bottom row /right columns. Cell-sets computed row-col ranges. polygons given st_bbox `x` subindexed [expand.grid]'d vectors row-col ranges.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_divide_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tile stars raster — tj_divide_raster","text":"operate row-col indices stars-object, row top bottom along y-axis, col left right x axis. tiles go top-bottom, left right order space. buffer tile, buffer (t,t) lead neighbouring tiles 2t cell-width row /col common. get 2t+1-cell overlaps set `open.upper=FALSE`, note minimum 1-cell overlap.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fast_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Element Fast — tj_fast_sample","title":"Sample Element Fast — tj_fast_sample","text":"Sample Element Fast","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fast_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Element Fast — tj_fast_sample","text":"","code":"tj_fast_sample(prob)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.3","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.3","text":"pixel spatiotemporal raster x time datacube, estimate linear regression model 0/1 jumps jump event correlated within neighbouring pixels.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.3","text":"","code":"tj_fit_m0.3(   x,   dat = NULL,   timevar = \"z\",   attrvar = \"values\",   niter = 1000,   gamma = 0,   prior_theta = list(m = c(a = 0, b = 0, d = 0), S = diag(1e+05 * c(1, 1, 1))),   prior_sigma2 = c(shape = 2, rate = 1),   prior_k = 0.5,   verbose = FALSE,   ctrl = list(burnin = 0.5, thin_steps = 1),   keep_hist = TRUE,   cells_to_ignore = NULL,   ignore_cells_with_na = TRUE,   truncate_jump_at_mean = 0,   ... )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.3","text":"x input stars object dat prepared data frame (development, please dont use). niter number gibbs sampler interations prior_k prior jump probabilities. Either vector (normalised) single value probability jump somewhere. keep_hist TRUE, keep mcmc trajectories variables. vector cell indices, keep history (save space). Give least 2 cell-indices logical, otherwise unexpected behaviour. (default: FALSE). truncate_jump_at_mean use truncated normal prior jump? truncate prior mean ad-hoc, sign says side keep. ... ignored","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.3","text":"assume datacube holds pixel (x-y) series values (`attrvar`) time (`timevar`). model estimate series best linear regression line might jump size delta one time points 1...T-1. special estimate \"jump T\" means jump predicted.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3_dac.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to fit model 3 to a mosaic, old version — tj_fit_m0.3_dac","title":"Wrapper to fit model 3 to a mosaic, old version — tj_fit_m0.3_dac","text":"Split datacube sub-rasters, fit model 0.3's, stitch together. Divide--conquer.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3_dac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to fit model 3 to a mosaic, old version — tj_fit_m0.3_dac","text":"","code":"tj_fit_m0.3_dac(   x,   timevar = \"z\",   attrvar = \"values\",   dat = NULL,   prior_theta = list(m = c(a = 0, b = 0, d = 0), S = diag(c(1, 1, 1) * 1e+05)),   prior_sigma2 = c(shape = 2, rate = 1),   prior_k = 0.5,   gamma = 0,   verbose = TRUE,   dbg = FALSE,   method = \"mc\",   niter = 100,   subsets = NULL,   cells_to_ignore = NULL,   truncate_jump_at_mean = 0,   ...,   ctrl = list(eps = 0.1, burnin = 0.5, thin_steps = 1),   stitcher = tj_stitcher_m0.5_v1.1,   ncores = 1,   fitpath = NULL,   fitid = \"youridhere\",   just_fit = !is.null(fitpath),   keep_all_in_memory = TRUE,   recalc = FALSE,   keep_hist = FALSE )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3_dac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to fit model 3 to a mosaic, old version — tj_fit_m0.3_dac","text":"x stars datacube subsets list cell indices ... ignored","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3_dac.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper to fit model 3 to a mosaic, old version — tj_fit_m0.3_dac","text":"Wrap fitting m0.3 subsets multicore computation. Obsolete. Use tj_fit_m0.x.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3s.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit m0.3 alternative parametrisation — tj_fit_m0.3s","title":"Fit m0.3 alternative parametrisation — tj_fit_m0.3s","text":"Wrapper m0.3 called data single list-item run-parameters","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.3s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit m0.3 alternative parametrisation — tj_fit_m0.3s","text":"","code":"tj_fit_m0.3s(..., cfg = tj_cfg_m0.3())"},{"path":[]},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.5.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to fit model 3 to a mosaic — tj_fit_m0.5","title":"Wrapper to fit model 3 to a mosaic — tj_fit_m0.5","text":"(OBSOLETE) Split datacube sub-rasters, fit model 0.3's, stitch together. Divide--conquer.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to fit model 3 to a mosaic — tj_fit_m0.5","text":"","code":"tj_fit_m0.5(   x,   timevar = \"year\",   attrvar = \"values\",   tiling,   cfg,   ...,   ncores = 1,   verbose = TRUE,   verbose2 = verbose,   fitpath = NULL,   fitid = \"youridhere\",   keep_all_in_memory = TRUE,   recalc = FALSE )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to fit model 3 to a mosaic — tj_fit_m0.5","text":"x stars datacube tiling given [tj_divide_raster()] cfg m0.3 parameters, see [tj_cfg_m0.3()] ... parameters passed [tj_fit_m0.3()] (case cfg used) cores number cores use multicore computation using `doParallel`","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to fit model 3 to a mosaic — tj_fit_m0.5","text":"List fits (keep_all_in_memory=TRUE) list files fits stored (fitpath provided). Note: fits cell_info element 'truecell' column provides mapping original 'x'.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper to fit model 3 to a mosaic — tj_fit_m0.5","text":"Wrap fitting m0.3 subsets multicore computation. tiling splits stars-object subrasters, [tj_fit_m0.3()] called subraster. replaced general tj_fit_m0.x.","code":""},{"path":[]},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6.html","id":null,"dir":"Reference","previous_headings":"","what":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6","text":"pixel spatiotemporal raster x time datacube,estimate linear regression model 0/1 jumps jump event correlated within neighbouring pixels.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6","text":"","code":"tj_fit_m0.6(   x,   dat = NULL,   timevar = \"z\",   attrvar = \"values\",   niter = 1000,   gamma = 0,   prior_theta = list(m = c(a = 0, b = 0), S = diag(1e+05 * c(1, 1))),   prior_delta = list(m = 0, s2 = 1e+05, a = -Inf, b = Inf),   prior_sigma2 = c(shape = 2, rate = 1),   prior_k = 0.5,   verbose = FALSE,   ctrl = list(burnin = 0.5, thin_steps = 1),   keep_hist = TRUE,   cells_to_ignore = NULL,   ignore_cells_with_na = TRUE,   neighbourhood_type = \"square\",   neighbourhood_range = 1,   neighbourhood_scale_to_8 = TRUE,   ... )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6","text":"x input stars object dat prepared data frame (development, please dont use). niter number gibbs sampler interations gamma interaction parameter. Multiplies kernel-values neighbourhood. 0 means spatial correlation. prior_theta prior (m=vec, S=matrx) intercept trend parameter, cells prior_delta prior(m=num, s2=num>0, =num, b=num>) truncated normal prior eac jump, trucate [,b] prior_k prior jump probabilities. Either vector (normalised) single value probability jump somewhere. keep_hist TRUE, keep mcmc trajectories variables. vector cell indices, keep history (save space). Give least 2 cell-indices logical, otherwise unexpected behaviour. (default: FALSE). neighbourhood_type neighbourhood defined (default: \"square\") neighbourhood_range large neighbourhood (default: 1) neighbourhood_scale_to_8 Logical: Scale sum weights full neighbhourhood 8? ... ignored","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6","text":"assume datacube holds pixel (x-y) series values (`attrvar`) time (`timevar`). model estimate series best linear regression line might jump size delta one time points 1...T-1. special estimate \"jump T\" means jump predicted. Explanation `neighbourhood_scale_to_8`: comparison reasons, original neighobuhrood nearest-8 adjacent pixels. Setting parameter TRUE scale sum neighbourhood 8, make kernel choice gamma independent.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6_v1","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6_v1","text":"pixel spatiotemporal raster x time datacube,estimate linear regression model 0/1 jumps jump event correlated within neighbouring pixels.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6_v1","text":"","code":"tj_fit_m0.6_v1(   x,   dat = NULL,   timevar = \"z\",   attrvar = \"values\",   niter = 1000,   gamma = 0,   prior_theta = list(m = c(a = 0, b = 0), S = diag(1e+05 * c(1, 1))),   prior_delta = list(m = 0, s2 = 1e+05, a = -Inf, b = Inf),   prior_sigma2 = c(shape = 2, rate = 1),   prior_k = 0.5,   verbose = FALSE,   ctrl = list(burnin = 0.5, thin_steps = 1),   keep_hist = TRUE,   cells_to_ignore = NULL,   ignore_cells_with_na = TRUE,   neighbourhood_type = \"square\",   neighbourhood_range = 1,   neighbourhood_scale_to_8 = TRUE,   ... )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6_v1","text":"x input stars object dat prepared data frame (development, please dont use). niter number gibbs sampler interations gamma interaction parameter. Multiplies kernel-values neighbourhood. 0 means spatial correlation. prior_theta prior (m=vec, S=matrx) intercept trend parameter, cells prior_delta prior(m=num, s2=num>0, =num, b=num>) truncated normal prior eac jump, trucate [,b] prior_k prior jump probabilities. Either vector (normalised) single value probability jump somewhere. keep_hist TRUE, keep mcmc trajectories variables. vector cell indices, keep history (save space). Give least 2 cell-indices logical, otherwise unexpected behaviour. (default: FALSE). neighbourhood_type neighbourhood defined (default: \"square\") neighbourhood_range large neighbourhood (default: 1) neighbourhood_scale_to_8 Logical: Scale sum weights full neighbhourhood 8? ... ignored","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6_v1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simultaneous linear regression with correlated changepoint estimation — tj_fit_m0.6_v1","text":"assume datacube holds pixel (x-y) series values (`attrvar`) time (`timevar`). model estimate series best linear regression line might jump size delta one time points 1...T-1. special estimate \"jump T\" means jump predicted. Explanation `neighbourhood_scale_to_8`: comparison reasons, original neighobuhrood nearest-8 adjacent pixels. Setting parameter TRUE scale sum neighbourhood 8, make kernel choice gamma independent.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6s.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit m0.6 alternative parametrisation — tj_fit_m0.6s","title":"Fit m0.6 alternative parametrisation — tj_fit_m0.6s","text":"Wrapper m0.6 called data single list-item run-parameters Wrapper m0.6 called data single list-item run-parameters","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.6s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit m0.6 alternative parametrisation — tj_fit_m0.6s","text":"","code":"tj_fit_m0.6s(..., cfg = tj_cfg_m0.6())  tj_fit_m0.6s(..., cfg = tj_cfg_m0.6())"},{"path":[]},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.x.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to fit models of the 0.x-family to a mosaic — tj_fit_m0.x","title":"Wrapper to fit models of the 0.x-family to a mosaic — tj_fit_m0.x","text":"Split datacube sub-rasters, fit model 0.x's, stitch together. Divide--conquer.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to fit models of the 0.x-family to a mosaic — tj_fit_m0.x","text":"","code":"tj_fit_m0.x(   x,   timevar = \"year\",   attrvar = \"values\",   tiling,   cfg,   ...,   ncores = 1,   verbose = TRUE,   verbose2 = verbose,   fitpath = NULL,   fitid = \"youridhere\",   keep_all_in_memory = TRUE,   model_variant = \"m0.3\",   recalc = FALSE )"},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to fit models of the 0.x-family to a mosaic — tj_fit_m0.x","text":"x stars datacube tiling given [tj_divide_raster()] cfg m0.x parameters, see [tj_cfg_m0.3(), tj_cfg_m0.6()] ... parameters passed [tj_fit_m0.3(), tj_fit_m0.6()] (case cfg used) cores number cores use multicore computation using `doParallel`","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to fit models of the 0.x-family to a mosaic — tj_fit_m0.x","text":"List fits (keep_all_in_memory=TRUE) list files fits stored (fitpath provided). Note: fits cell_info element 'truecell' column provides mapping original 'x'.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_fit_m0.x.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper to fit models of the 0.x-family to a mosaic — tj_fit_m0.x","text":"Wrap fitting m0.x subsets multicore computation. tiling splits stars-object subrasters, [tj_fit_m0.3(), tj_fit_m0.6()] called subraster.","code":""},{"path":[]},{"path":"https://antiphon.github.io/tjdc/reference/tj_i2rc.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell to Row-Column — tj_i2rc","title":"Cell to Row-Column — tj_i2rc","text":"Cell Row-Column","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_i2rc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell to Row-Column — tj_i2rc","text":"","code":"tj_i2rc(i, nr, nc)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_i2rc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell to Row-Column — tj_i2rc","text":"cell nr rowss nc colums","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_mann_kendall.html","id":null,"dir":"Reference","previous_headings":"","what":"Mann-Kendall Trend Test — tj_mann_kendall","title":"Mann-Kendall Trend Test — tj_mann_kendall","text":"1D, just regular old.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_mann_kendall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mann-Kendall Trend Test — tj_mann_kendall","text":"","code":"tj_mann_kendall(x, ..., est_beta = TRUE, calc_slope = est_beta, check = TRUE)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_mann_kendall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mann-Kendall Trend Test — tj_mann_kendall","text":"x Time series, either vector values n x 2 matrix value,time pairs ... ignored est_beta calc_slope (legacy) calc_slope Estimate linear coefficient well? check check data. give nx2 matrix FALSE saves time.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_mann_kendall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mann-Kendall Trend Test — tj_mann_kendall","text":"ties correction. exists package mainly sanity checks.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_predict_m0.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction the series per cell — tj_predict_m0.3","title":"Prediction the series per cell — tj_predict_m0.3","text":"Prediction series per cell","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_predict_m0.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction the series per cell — tj_predict_m0.3","text":"","code":"tj_predict_m0.3(x, cells, ..., s)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_predict_m0.3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction the series per cell — tj_predict_m0.3","text":"x object fitted package's tj_fit_m0.3 cells cells predict? Default: s output summarise_m0.3","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_rc2i.html","id":null,"dir":"Reference","previous_headings":"","what":"Row-Col to Cell — tj_rc2i","title":"Row-Col to Cell — tj_rc2i","text":"Row-Col Cell","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_rc2i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row-Col to Cell — tj_rc2i","text":"","code":"tj_rc2i(rc, nr, nc)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_rc2i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row-Col to Cell — tj_rc2i","text":"nr rowss nc colums cell","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process input stars to legacy data format — tj_stars_to_data","title":"Process input stars to legacy data format — tj_stars_to_data","text":"Convert stars object tibble variable names recogniced fitters.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process input stars to legacy data format — tj_stars_to_data","text":"","code":"tj_stars_to_data(x, timevar = \"z\", attrvar = \"values\")"},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process input stars to legacy data format — tj_stars_to_data","text":"x stars object timevar dimension time attrvar attribute keep","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process input stars to legacy data format — tj_stars_to_data","text":"tibble variables `c_x`, `c_y` spatial coordinates `time` temporal coordinates, `col,row`  top-bottom - left-right indices data matrix, `cell` described , `value` values chosen attribute. output also attribute grid=c(nrow, ncol).","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process input stars to legacy data format — tj_stars_to_data","text":"essentially wrapper as_tibble-method stars-objects. difference one attribute kept, chosen `attrvar`. assume spatial dimensions names 'x' 'y', time dimension defined `timevar`. function adds cell number way `terra::.data.frame` : Spatially top--bottom, left right. means cell=1 cell coordinate (min(x), max(y)), last cell (max(x), min(y)).","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_polygon_union.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster to Polygons\nTake stars-raster and create a polygons of those pixels with >0 values using st_union — tj_stars_to_polygon_union","title":"Raster to Polygons\nTake stars-raster and create a polygons of those pixels with >0 values using st_union — tj_stars_to_polygon_union","text":"Raster Polygons Take stars-raster create polygons pixels >0 values using st_union","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_polygon_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster to Polygons\nTake stars-raster and create a polygons of those pixels with >0 values using st_union — tj_stars_to_polygon_union","text":"","code":"tj_stars_to_polygon_union(r, which = 1)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_polygon_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster to Polygons\nTake stars-raster and create a polygons of those pixels with >0 values using st_union — tj_stars_to_polygon_union","text":"r stars object","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stars_to_polygon_union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster to Polygons\nTake stars-raster and create a polygons of those pixels with >0 values using st_union — tj_stars_to_polygon_union","text":"sf-object polygons","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stitcher_m0.5_v1.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Stitch a mosaic model fit — tj_stitcher_m0.5_v1.1","title":"Stitch a mosaic model fit — tj_stitcher_m0.5_v1.1","text":"Average overlapping regions' pixel estimates. Old format.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stitcher_m0.5_v1.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stitch a mosaic model fit — tj_stitcher_m0.5_v1.1","text":"","code":"tj_stitcher_m0.5_v1.1(list_of_fits, subsets)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_stitcher_m0.x.html","id":null,"dir":"Reference","previous_headings":"","what":"Stitch a mosaic model fit — tj_stitcher_m0.x","title":"Stitch a mosaic model fit — tj_stitcher_m0.x","text":"Average overlapping regions' pixel estimates. Old format.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_stitcher_m0.x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stitch a mosaic model fit — tj_stitcher_m0.x","text":"","code":"tj_stitcher_m0.x(list_of_fits, tiling)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_summarise_m0.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise fit of M0.3 as a tibble — tj_summarise_m0.3","title":"Summarise fit of M0.3 as a tibble — tj_summarise_m0.3","text":"Summarise fit M0.3 tibble","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_summarise_m0.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise fit of M0.3 as a tibble — tj_summarise_m0.3","text":"","code":"tj_summarise_m0.3(x, ..., cells, burnin, thin_steps)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_summarise_m0.3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise fit of M0.3 as a tibble — tj_summarise_m0.3","text":"x object fitted package's tj_fit_m0.3 burnin mcmc traces included (`keep_hist` false), recalculate summaries using iteration vector (burnin*nsteps):nsteps thin_steps take every `thin_steps` iteration vector","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_summarise_m0.5.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise fit of M0.5 stiched results — tj_summarise_m0.5","title":"Summarise fit of M0.5 stiched results — tj_summarise_m0.5","text":"Summarise fit M0.5 stiched results","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_summarise_m0.5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise fit of M0.5 stiched results — tj_summarise_m0.5","text":"","code":"tj_summarise_m0.5(x, ..., cells)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_summarise_m0.5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise fit of M0.5 stiched results — tj_summarise_m0.5","text":"x object fitted package's tj_fit_m0.5 stitched","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the history — tj_trace_m0.3","title":"Get the history — tj_trace_m0.3","text":"Compile MCMC trace one cell","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the history — tj_trace_m0.3","text":"","code":"tj_trace_m0.3(x, cell, ...)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the history — tj_trace_m0.3","text":"x fit_m0.3 `keep_hist=TRUE` cell cell","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the history — tj_trace_m0.3","text":"Combine posterior-package.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3_dac.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.3_dac","title":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.3_dac","text":"Retrieve trace particular cell list mosaic fits","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3_dac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.3_dac","text":"","code":"tj_trace_m0.3_dac(x, cell, add_sub_info = FALSE)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.3_dac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.3_dac","text":"x list fits tj_fit_m0.3_dac cell cell, original raster","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.5.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.5","title":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.5","text":"Retrieve trace particular cell list mosaic fits","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.5","text":"","code":"tj_trace_m0.5(x, cell, add_sub_info = FALSE)"},{"path":"https://antiphon.github.io/tjdc/reference/tj_trace_m0.5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve trace for particular cell from list of mosaic fits — tj_trace_m0.5","text":"x list fits tj_fit_m0.5 cell cell, original raster","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tjdc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Trends and Jumps in Thin DataCubes — tjdc-package","title":"Trends and Jumps in Thin DataCubes — tjdc-package","text":"Pixel level time-series analysis help neighboring pixels.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tjdc-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trends and Jumps in Thin DataCubes — tjdc-package","text":"`tjdc` package implements methods fast trend changepoint detection stacked raster data, data cubes. Current version based `stars`-package data management, might change future. main idea package provide user-friendly wrappers split-calc-merge type operations high spatial dimension, low temporal dimension data-cubes. Motivation research focus datacubes Finnish National Forest Inventory spatial resolution 16m x 16m mere 10-15 time steps. series lower threshold sophisticated change point trend analysis techniques, assuming spatial correlation nearby pixels might able improve power. statistical functionality roughly two groups.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tjdc-package.html","id":"trend-analysis","dir":"Reference","previous_headings":"","what":"Trend analysis","title":"Trends and Jumps in Thin DataCubes — tjdc-package","text":"functionality carried `ConMK` package. main ideas revolves around contextual Mann-Kendall's test [tj_contextual_mann_kendall()]. Nothing new package compared `ConMK` switching retired `raster` package `stars`.","code":""},{"path":"https://antiphon.github.io/tjdc/reference/tjdc-package.html","id":"change-point-analysis","dir":"Reference","previous_headings":"","what":"Change-point analysis","title":"Trends and Jumps in Thin DataCubes — tjdc-package","text":"short data sequences high noise, detecting reliably even one change-point challenging. simple linear trend model possible jump estimated jump events correlated neighbours.","code":""},{"path":[]}]
