// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mann_kendall_S
NumericVector mann_kendall_S(NumericMatrix x);
RcppExport SEXP _tjdc_mann_kendall_S(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mann_kendall_S(x));
    return rcpp_result_gen;
END_RCPP
}
// mann_kendall_S_and_slope
NumericMatrix mann_kendall_S_and_slope(NumericMatrix x, NumericVector time);
RcppExport SEXP _tjdc_mann_kendall_S_and_slope(SEXP xSEXP, SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(mann_kendall_S_and_slope(x, time));
    return rcpp_result_gen;
END_RCPP
}
// c_contextual_mann_kendall
List c_contextual_mann_kendall(NumericMatrix x, int nrow, NumericVector time, int neighbourhood, bool calc_slope);
RcppExport SEXP _tjdc_c_contextual_mann_kendall(SEXP xSEXP, SEXP nrowSEXP, SEXP timeSEXP, SEXP neighbourhoodSEXP, SEXP calc_slopeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type neighbourhood(neighbourhoodSEXP);
    Rcpp::traits::input_parameter< bool >::type calc_slope(calc_slopeSEXP);
    rcpp_result_gen = Rcpp::wrap(c_contextual_mann_kendall(x, nrow, time, neighbourhood, calc_slope));
    return rcpp_result_gen;
END_RCPP
}
// sample_fast_c
int sample_fast_c(NumericVector prob);
RcppExport SEXP _tjdc_sample_fast_c(SEXP probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type prob(probSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_fast_c(prob));
    return rcpp_result_gen;
END_RCPP
}
// c_mann_kendall_test
List c_mann_kendall_test(NumericVector x);
RcppExport SEXP _tjdc_c_mann_kendall_test(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(c_mann_kendall_test(x));
    return rcpp_result_gen;
END_RCPP
}
// c_mann_kendall_test_and_beta
List c_mann_kendall_test_and_beta(NumericVector x, NumericVector t);
RcppExport SEXP _tjdc_c_mann_kendall_test_and_beta(SEXP xSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(c_mann_kendall_test_and_beta(x, t));
    return rcpp_result_gen;
END_RCPP
}
// neighbour_cells_queen_row_col
IntegerVector neighbour_cells_queen_row_col(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_neighbour_cells_queen_row_col(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(neighbour_cells_queen_row_col(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// neighbour_cells_queen_col_row
IntegerVector neighbour_cells_queen_col_row(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_neighbour_cells_queen_col_row(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(neighbour_cells_queen_col_row(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// forward_neighbour_cells_queen_row_col
IntegerVector forward_neighbour_cells_queen_row_col(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_forward_neighbour_cells_queen_row_col(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_neighbour_cells_queen_row_col(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// forward_neighbour_cells_queen_col_row
IntegerVector forward_neighbour_cells_queen_col_row(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_forward_neighbour_cells_queen_col_row(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_neighbour_cells_queen_col_row(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// neighbour_cells_rook_row_col
IntegerVector neighbour_cells_rook_row_col(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_neighbour_cells_rook_row_col(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(neighbour_cells_rook_row_col(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// neighbour_cells_rook_col_row
IntegerVector neighbour_cells_rook_col_row(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_neighbour_cells_rook_col_row(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(neighbour_cells_rook_col_row(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// forward_neighbour_cells_rook_row_col
IntegerVector forward_neighbour_cells_rook_row_col(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_forward_neighbour_cells_rook_row_col(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_neighbour_cells_rook_row_col(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// forward_neighbour_cells_rook_col_row
IntegerVector forward_neighbour_cells_rook_col_row(int i, int nrow, int ncol);
RcppExport SEXP _tjdc_forward_neighbour_cells_rook_col_row(SEXP iSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_neighbour_cells_rook_col_row(i, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tjdc_mann_kendall_S", (DL_FUNC) &_tjdc_mann_kendall_S, 1},
    {"_tjdc_mann_kendall_S_and_slope", (DL_FUNC) &_tjdc_mann_kendall_S_and_slope, 2},
    {"_tjdc_c_contextual_mann_kendall", (DL_FUNC) &_tjdc_c_contextual_mann_kendall, 5},
    {"_tjdc_sample_fast_c", (DL_FUNC) &_tjdc_sample_fast_c, 1},
    {"_tjdc_c_mann_kendall_test", (DL_FUNC) &_tjdc_c_mann_kendall_test, 1},
    {"_tjdc_c_mann_kendall_test_and_beta", (DL_FUNC) &_tjdc_c_mann_kendall_test_and_beta, 2},
    {"_tjdc_neighbour_cells_queen_row_col", (DL_FUNC) &_tjdc_neighbour_cells_queen_row_col, 3},
    {"_tjdc_neighbour_cells_queen_col_row", (DL_FUNC) &_tjdc_neighbour_cells_queen_col_row, 3},
    {"_tjdc_forward_neighbour_cells_queen_row_col", (DL_FUNC) &_tjdc_forward_neighbour_cells_queen_row_col, 3},
    {"_tjdc_forward_neighbour_cells_queen_col_row", (DL_FUNC) &_tjdc_forward_neighbour_cells_queen_col_row, 3},
    {"_tjdc_neighbour_cells_rook_row_col", (DL_FUNC) &_tjdc_neighbour_cells_rook_row_col, 3},
    {"_tjdc_neighbour_cells_rook_col_row", (DL_FUNC) &_tjdc_neighbour_cells_rook_col_row, 3},
    {"_tjdc_forward_neighbour_cells_rook_row_col", (DL_FUNC) &_tjdc_forward_neighbour_cells_rook_row_col, 3},
    {"_tjdc_forward_neighbour_cells_rook_col_row", (DL_FUNC) &_tjdc_forward_neighbour_cells_rook_col_row, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_tjdc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
